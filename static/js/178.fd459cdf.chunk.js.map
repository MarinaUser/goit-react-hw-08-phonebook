{"version":3,"file":"static/js/178.fd459cdf.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/ContactForm/ContactForm.js","components/ContactFilter/ContactFilter.js","components/ContactList/ContactItem/ContactItem.styled.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/Contacts/Contacts.js"],"sourcesContent":["import { ThreeCircles } from 'react-loader-spinner';\n// import { Container } from './Loader.styled';\n\nexport const Loader = () => {\n    return (\n        <div>\n        <ThreeCircles\n  height=\"100\"\n  width=\"100\"\n  color=\"#4fa94d\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n  ariaLabel=\"three-circles-rotating\"\n  outerCircleColor=\"lightsalmon\"\n  innerCircleColor=\"lightsalmon\"\n  middleCircleColor=\"lightsalmon\"\n    />\n        </div>)\n }","import { useDispatch, useSelector } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport { selectContacts, selectOperation } from 'redux/contacts/contactSelectors';\nimport { addContact } from 'redux/contacts/ContactOperations';\nimport { Loader } from 'components/Loader/Loader';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme();\n\n\nexport default function ContactForm() {\n  const contacts = useSelector(selectContacts);\n  const operation = useSelector(selectOperation);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const { name, number } = form;\n\n    let value = {\n      name: name.value,\n      number: number.value,\n    };\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.value.toLowerCase()\n      )\n    ) {\n      return toast(`${name.value} is already in contacts.`, {\n        duration: 3000,\n      });\n    }\n\n    const { error } = await dispatch(addContact(value));\n    if (!error) {\n      form.reset();\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            padding: '20px',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"30px\" sx={{ color: 'bleack' }}>\n            New Contact\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            sx={{\n              mt: 3,\n              '& label.Mui-focused': {\n                color: 'blueviolet',\n              },\n\n              '& .MuiOutlinedInput-root': {\n                '&.Mui-focused fieldset': {\n                  borderColor: 'blueviolet',\n                },\n              },\n            }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"Name contact\"\n                  name=\"name\"\n                  type=\"text\"\n                  autoComplete=\"name\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"number\"\n                  name=\"number\"\n                  label=\"Number\"\n                  type=\"tel\"\n                  autoComplete=\"new-tel\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              disabled={operation === 'add'}\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                gap: '20px',\n                mt: 3,\n                mb: 2,\n                bgcolor: 'blueviolet',\n                '&:hover': {\n                  backgroundColor: '#4B0082',\n                },\n                '&:focus': {\n                  backgroundColor: '#4B0082',\n                }\n              }}\n            >\n              {operation === 'add' ? (\n                <>\n                  <Loader\n                    color={'blueviolet'}\n                    size={20}\n                  />\n                  <span>Add ... </span>\n                </>\n              ) : (\n                'Add contact'\n              )}\n            </Button>\n          </Box>\n        </Box>\n       \n      </Container>\n      </ThemeProvider>\n  );\n}\n\n\n\n\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filtersSlice';\nimport { selectValueFilter } from 'redux/contacts/contactSelectors';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\n\nexport const Filter = () => {\n  const filter = useSelector(selectValueFilter);\n  const dispatch = useDispatch(setFilter);\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n  return (\n    <Box\n     sx={{\n              '& label.Mui-focused': {\n                color: 'blueviolet',\n              },\n\n              '& .MuiOutlinedInput-root': {\n                '&.Mui-focused fieldset': {\n                  borderColor: 'blueviolet',\n                },\n              },\n            }}>\n    <TextField\n      id=\"logFilter\"\n      label=\"Find contact by name\"\n      name=\"filter\"\n      value={filter}\n      onChange={handleFilterChange}\n      sx={{ width: 350, marginBottom: 3 }}\n      size=\"small\"\n      />\n      </Box>\n  );\n};","import styled from 'styled-components';\n\nexport const ContactWrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 30px;\n  padding: 5px 0;\n`;\n\nexport const Text = styled.p`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 5px;\n  font-family: inherit;\n  font-size: 18px;\n  flex-grow: 1;\n  span {\n    font-size: 16px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  svg {\n    color: #bdbdbd;\n  }\n  &:hover {\n    svg {\n      color: blueviolet;\n    }\n  }\n`;","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MdDeleteForever } from 'react-icons/md';\nimport { selectOperation } from 'redux/contacts/contactSelectors';\nimport { Loader } from 'components/Loader/Loader';\nimport { deleteContact } from 'redux/contacts/ContactOperations';\nimport {\n  ContactWrap,\n  Text,\n  Button,\n} from 'components/ContactList/ContactItem/ContactItem.styled';\n\nexport const ContactItem = ({ contact: { id, name, number } }) => {\n  const operation = useSelector(selectOperation);\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <>\n      <ContactWrap>\n        <Text>\n          {name}\n          <span>Phone: {number}</span>\n        </Text>\n\n        <Button type=\"button\" onClick={handleDelete}>\n          {operation === id ? (\n            <Loader\n              loading={operation === id}\n              color={'#003b8e'}\n              size={18}\n            />\n          ) : (\n            <MdDeleteForever size={28} />\n          )}\n        </Button>\n      </ContactWrap>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const ContactListItem = styled.li`\n  border-top: 1px solid blueviolet;\n`;","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/contactSelectors';\n\nimport { ContactItem } from 'components/ContactList/ContactItem/ContactItem';\nimport {\n  ContactsList,\n  ContactListItem,\n} from 'components/ContactList/ContactList.styled';\n\nconst ContactList = () => {\n  const visibleСontacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ContactsList>\n      {visibleСontacts.map(contact => (\n        <ContactListItem key={contact.id}>\n          <ContactItem contact={contact} />\n        </ContactListItem>\n      ))}\n    </ContactsList>\n  );\n};\n\nexport default ContactList;\n\n\n\n// import { useDispatch } from 'react-redux';\n// import { useSelector } from 'react-redux';\n// import { deleteContact } from 'redux/contacts/ContactOperations';\n// import { selectVisibleContacts } from 'redux/contacts/contactSelectors';\n// import { selectValueFilter } from 'redux/contacts/contactSelectors';\n// import PropTypes from 'prop-types';\n\n// // import { List, Item, DelBtn  } from './ContactList.styled';\n\n// function ContactList () {\n//   const dispatch = useDispatch(); \n  \n//   const contacts = useSelector(selectVisibleContacts);\n//   const filter = useSelector(selectValueFilter);\n\n//   const filtered = contacts.filter(contact =>\n//   contact.name.toLowerCase().includes(filter.toLowerCase())\n//   );\n\n//   if (filtered) {\n//     return (\n//       <ul>\n//         {filtered.map(({ id, name, phone }) => (\n//           <li key={id}>\n//             <span>{name}: </span>\n//             <span>{phone} </span>\n//             <button\n//               type=\"button\"\n//               onClick={() => dispatch(deleteContact(id))}\n//               value=\"delete\"\n//             >Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     );\n//   }\n// }\n\n// export default ContactList;\n\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.array,\n// };\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/ContactFilter/ContactFilter';\nimport  ContactList  from 'components/ContactList/ContactList';\nimport { useState } from 'react';\nimport { useAuth } from 'hooks';\n\nexport default function ContactsPage() {\n  const [filter, setFilter] = useState('');\n   const { isLoggedIn } = useAuth();\n\n\n  const handleChange = e => {\n    setFilter(e);\n  };\n\n  return (\n    <div>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {isLoggedIn && <Filter filter={filter} handleChange={handleChange} />}\n      <ContactList filter={filter} />\n    </div>\n  );\n}"],"names":["Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","theme","createTheme","ContactForm","contacts","useSelector","selectContacts","operation","selectOperation","dispatch","useDispatch","handleSubmit","e","preventDefault","form","target","name","number","value","some","contact","toLowerCase","toast","duration","addContact","error","reset","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","display","flexDirection","alignItems","padding","Typography","variant","onSubmit","mt","borderColor","Grid","container","spacing","item","xs","TextField","required","fullWidth","id","label","type","autoComplete","autoFocus","Button","disabled","justifyContent","gap","mb","bgcolor","backgroundColor","size","Filter","filter","selectValueFilter","setFilter","onChange","currentTarget","marginBottom","ContactWrap","styled","Text","ContactItem","onClick","deleteContact","loading","ContactsList","ContactListItem","visibleСontacts","selectVisibleContacts","map","ContactsPage","useState","isLoggedIn","useAuth","handleChange"],"sourceRoot":""}